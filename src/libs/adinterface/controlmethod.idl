// This is a -*- C++ -*- header.
//////////////////////////////////////////
// Copyright (C) 2010 Toshinobu Hondo, Ph.D.
// Science Liaison / Advanced Instrumentation Project
//
// build setup
// $(ACE_ROOT)\bin\tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) $(InputPath)
//////////////////////////////////////////

module ControlMethod {

    enum eDeviceCategory {
        device_unknown
        , device_sampler               // autosampler or anything prepare sample (trigger injection)
        , device_gas_chromatograph     // just GC w/ or w/o injector
        , device_liquid_chromatograph  // degasser, pump, gradienter, oven (sync to an injection)
        , device_detector              // LC/GC detectors including MS
    };
    
    struct InstInfo {
        unsigned long type_id_;
        unsigned long unit_id_;
        eDeviceCategory category_;
        wstring modelname_;
        wstring serial_number_;
        wstring description_;
    };
    
    struct TimeValue {
        unsigned long sec_;
        unsigned long usec_;
    };
    
    enum eValueType {
        eBoolean
        , eInt32
        , eInt64
        , eCard32
        , eCard64
        , eDouble
        , eWString
    };
    
    union argument switch( eValueType ) {
    case eBoolean:  boolean boolean_value_;
    case eInt32:    long int32_value_;
    case eCard32:   unsigned long card32_value_;
    case eDouble:   double double_value_;
    case eWString:  wstring wstring_value_;
    };
    
    struct MethodLine {
        boolean isInitialCondition_;
        TimeValue time_;
        unsigned long type_id_;
        unsigned long unit_id_;
        sequence< argument > arguments_;
    };
    
    interface Method {
        //sequence< InstInfo > iinfo_vec_;
        //sequence< MethodLine > lines_;
    };
    
};
