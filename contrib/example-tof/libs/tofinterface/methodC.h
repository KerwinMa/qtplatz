// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.9
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_IDL_METHODC_5QQCSN_H_
#define _TAO_IDL_METHODC_5QQCSN_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "constantsC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 9
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace TOF
{

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct AnalyzerMethod;

  typedef
    ::TAO_Fixed_Var_T<
        AnalyzerMethod
      >
    AnalyzerMethod_var;

  typedef
    AnalyzerMethod &
    AnalyzerMethod_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  AnalyzerMethod
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef AnalyzerMethod_var _var_type;
    typedef AnalyzerMethod_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long sampling_interval;
    ::CORBA::Long resolving_power;
    ::CORBA::Long number_of_average;
    ::CORBA::Double matsuda_plate_voltage;
    ::CORBA::Double va_pulse_voltage;
    ::CORBA::Double potential_lift_pulse_voltage;
    ::CORBA::Double einzel_voltage;
    ::CORBA::Double detector_voltage;
    ::CORBA::Double accelaration_voltage;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AnalyzerMethod;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct FFTMethod;

  typedef
    ::TAO_Fixed_Var_T<
        FFTMethod
      >
    FFTMethod_var;

  typedef
    FFTMethod &
    FFTMethod_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  FFTMethod
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef FFTMethod_var _var_type;
    typedef FFTMethod_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long nbrSamples;
    ::CORBA::Double delay;
    ::CORBA::Double freq;
    ::CORBA::Double voffs;
    ::CORBA::Double intens;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_FFTMethod;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_EI_Method;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_EI_Method
      >
    IonSource_EI_Method_var;

  typedef
    IonSource_EI_Method &
    IonSource_EI_Method_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_EI_Method
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_EI_Method_var _var_type;
    typedef IonSource_EI_Method_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Double source_temp;
    ::CORBA::Double interface_temp;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_EI_Method;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_DART_Method;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_DART_Method
      >
    IonSource_DART_Method_var;

  typedef
    IonSource_DART_Method &
    IonSource_DART_Method_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_DART_Method
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_DART_Method_var _var_type;
    typedef IonSource_DART_Method_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Double source_temp;
    ::CORBA::Double interface_temp;
    ::CORBA::Double ionization_voltage;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_DART_Method;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  class IonSourceMethod;

  typedef
    ::TAO_Fixed_Var_T<
        IonSourceMethod
      >
    IonSourceMethod_var;

  typedef
    IonSourceMethod &
    IonSourceMethod_out;

  class  IonSourceMethod
  {
  public:
    IonSourceMethod (void);
    IonSourceMethod (const IonSourceMethod &);
    ~IonSourceMethod (void);

    IonSourceMethod &operator= (const IonSourceMethod &);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\discriminant_ch.cpp:70

    void _d (TOF_C::eIonSource);
    TOF_C::eIonSource _d (void) const;

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSourceMethod_var _var_type;
    typedef IonSourceMethod_out _out_type;

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:659

    void dart (const TOF::IonSource_DART_Method &);
    const TOF::IonSource_DART_Method &dart (void) const;
    TOF::IonSource_DART_Method &dart (void);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:659

    void ei (const TOF::IonSource_EI_Method &);
    const TOF::IonSource_EI_Method &ei (void) const;
    TOF::IonSource_EI_Method &ei (void);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\union_ch.cpp:124

    void _default (void);
  private:
    TOF_C::eIonSource disc_;

    union
    {
      // TAO_IDL - Generated from
      // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:522
      TOF::IonSource_DART_Method dart_;
      // TAO_IDL - Generated from
      // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:522
      TOF::IonSource_EI_Method ei_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSourceMethod;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct ControlMethod;

  typedef
    ::TAO_Fixed_Var_T<
        ControlMethod
      >
    ControlMethod_var;

  typedef
    ControlMethod &
    ControlMethod_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  ControlMethod
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef ControlMethod_var _var_type;
    typedef ControlMethod_out _out_type;

    static void _tao_any_destructor (void *);
    
    TOF::AnalyzerMethod analyzer;
    

    TOF::IonSourceMethod ionSource;
    TOF::FFTMethod fft;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ControlMethod;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct TuneMethod;

  typedef
    ::TAO_Fixed_Var_T<
        TuneMethod
      >
    TuneMethod_var;

  typedef
    TuneMethod &
    TuneMethod_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  TuneMethod
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef TuneMethod_var _var_type;
    typedef TuneMethod_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long resv;
    ::CORBA::Long resv1;
    ::CORBA::Long resv2;
    ::CORBA::Long resv3;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TuneMethod;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct Configuration;

  typedef
    ::TAO_Var_Var_T<
        Configuration
      >
    Configuration_var;

  typedef
    ::TAO_Out_T<
        Configuration
      >
    Configuration_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  Configuration
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef Configuration_var _var_type;
    typedef Configuration_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Boolean configured_;
    ::TAO::String_Manager option_type;
    ::TAO::String_Manager option_name;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Configuration;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOF_CONFIGURATION_SEQUENCE_CH_)
#define _TOF_CONFIGURATION_SEQUENCE_CH_

  class configuration_sequence;

  typedef
    ::TAO_VarSeq_Var_T<
        configuration_sequence
      >
    configuration_sequence_var;

  typedef
    ::TAO_Seq_Out_T<
        configuration_sequence
      >
    configuration_sequence_out;

  class  configuration_sequence
    : public
        ::TAO::unbounded_value_sequence<
            Configuration
          >
  {
  public:
    configuration_sequence (void);
    configuration_sequence ( ::CORBA::ULong max);
    configuration_sequence (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Configuration* buffer,
      ::CORBA::Boolean release = false);
    configuration_sequence (const configuration_sequence &);
    virtual ~configuration_sequence (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef configuration_sequence_var _var_type;
    typedef configuration_sequence_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_configuration_sequence;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct DeviceId;

  typedef
    ::TAO_Var_Var_T<
        DeviceId
      >
    DeviceId_var;

  typedef
    ::TAO_Out_T<
        DeviceId
      >
    DeviceId_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  DeviceId
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef DeviceId_var _var_type;
    typedef DeviceId_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager manufacturer;
    ::TAO::String_Manager revision;
    TOF::configuration_sequence configurations;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DeviceId;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct acqSegment;

  typedef
    ::TAO_Fixed_Var_T<
        acqSegment
      >
    acqSegment_var;

  typedef
    acqSegment &
    acqSegment_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  acqSegment
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef acqSegment_var _var_type;
    typedef acqSegment_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::UShort startIndex;
    ::CORBA::UShort numberOfAverage;
    ::CORBA::ULong waitTime;
    ::CORBA::UShort numberOfSamples;
    ::CORBA::UShort stepOf;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_acqSegment;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOF_ACQSEGMENT_SEQUENCE_CH_)
#define _TOF_ACQSEGMENT_SEQUENCE_CH_

  class acqSegment_sequence;

  typedef
    ::TAO_FixedSeq_Var_T<
        acqSegment_sequence
      >
    acqSegment_sequence_var;

  typedef
    ::TAO_Seq_Out_T<
        acqSegment_sequence
      >
    acqSegment_sequence_out;

  class  acqSegment_sequence
    : public
        ::TAO::unbounded_value_sequence<
            acqSegment
          >
  {
  public:
    acqSegment_sequence (void);
    acqSegment_sequence ( ::CORBA::ULong max);
    acqSegment_sequence (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      acqSegment* buffer,
      ::CORBA::Boolean release = false);
    acqSegment_sequence (const acqSegment_sequence &);
    virtual ~acqSegment_sequence (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef acqSegment_sequence_var _var_type;
    typedef acqSegment_sequence_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_acqSegment_sequence;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct acqMethod;

  typedef
    ::TAO_Var_Var_T<
        acqMethod
      >
    acqMethod_var;

  typedef
    ::TAO_Out_T<
        acqMethod
      >
    acqMethod_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  acqMethod
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef acqMethod_var _var_type;
    typedef acqMethod_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong methodId;
    TOF::acqSegment_sequence segments;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_acqMethod;

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module TOF

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::AnalyzerMethod>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::AnalyzerMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::FFTMethod>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::FFTMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::IonSource_EI_Method>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::IonSource_EI_Method,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::IonSource_DART_Method>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::IonSource_DART_Method,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::TOF::IonSourceMethod>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::IonSourceMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::ControlMethod>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::ControlMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::TuneMethod>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::TuneMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::Configuration>
    : public
        Var_Size_Arg_Traits_T<
            ::TOF::Configuration,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOF::configuration_sequence>
    : public
        Var_Size_Arg_Traits_T<
            ::TOF::configuration_sequence,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::DeviceId>
    : public
        Var_Size_Arg_Traits_T<
            ::TOF::DeviceId,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::acqSegment>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOF::acqSegment,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOF::acqSegment_sequence>
    : public
        Var_Size_Arg_Traits_T<
            ::TOF::acqSegment_sequence,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOF::acqMethod>
    : public
        Var_Size_Arg_Traits_T<
            ::TOF::acqMethod,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::AnalyzerMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::AnalyzerMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::AnalyzerMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::AnalyzerMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::AnalyzerMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::AnalyzerMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::AnalyzerMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::AnalyzerMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::FFTMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::FFTMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::FFTMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::FFTMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::FFTMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::FFTMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::FFTMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::FFTMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::IonSource_EI_Method &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::IonSource_EI_Method*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::IonSource_EI_Method *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::IonSource_EI_Method *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::IonSource_EI_Method &); // copying version
 void operator<<= (::CORBA::Any &, TOF::IonSource_EI_Method*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::IonSource_EI_Method *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::IonSource_EI_Method *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::IonSource_DART_Method &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::IonSource_DART_Method*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::IonSource_DART_Method *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::IonSource_DART_Method *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::IonSource_DART_Method &); // copying version
 void operator<<= (::CORBA::Any &, TOF::IonSource_DART_Method*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::IonSource_DART_Method *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::IonSource_DART_Method *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\any_op_ch.cpp:40



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::IonSourceMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::IonSourceMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::IonSourceMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::IonSourceMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::IonSourceMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::IonSourceMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::IonSourceMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::IonSourceMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::ControlMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::ControlMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::ControlMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::ControlMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::ControlMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::ControlMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::ControlMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::ControlMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::TuneMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::TuneMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::TuneMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::TuneMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::TuneMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::TuneMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::TuneMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::TuneMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::Configuration &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::Configuration*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::Configuration *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::Configuration *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::Configuration &); // copying version
 void operator<<= (::CORBA::Any &, TOF::Configuration*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::Configuration *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::Configuration *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= ( ::CORBA::Any &, const ::TOF::configuration_sequence &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOF::configuration_sequence*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::configuration_sequence *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::configuration_sequence *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOF::configuration_sequence &); // copying version
 void operator<<= ( ::CORBA::Any &, TOF::configuration_sequence*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::configuration_sequence *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::configuration_sequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::DeviceId &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::DeviceId*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::DeviceId *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::DeviceId *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::DeviceId &); // copying version
 void operator<<= (::CORBA::Any &, TOF::DeviceId*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::DeviceId *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::DeviceId *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::acqSegment &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::acqSegment*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::acqSegment *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::acqSegment *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::acqSegment &); // copying version
 void operator<<= (::CORBA::Any &, TOF::acqSegment*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::acqSegment *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::acqSegment *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= ( ::CORBA::Any &, const ::TOF::acqSegment_sequence &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOF::acqSegment_sequence*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::acqSegment_sequence *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::acqSegment_sequence *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOF::acqSegment_sequence &); // copying version
 void operator<<= ( ::CORBA::Any &, TOF::acqSegment_sequence*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::acqSegment_sequence *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::acqSegment_sequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOF
{
   void operator<<= (::CORBA::Any &, const ::TOF::acqMethod &); // copying version
   void operator<<= (::CORBA::Any &, ::TOF::acqMethod*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOF::acqMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOF::acqMethod *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOF::acqMethod &); // copying version
 void operator<<= (::CORBA::Any &, TOF::acqMethod*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOF::acqMethod *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOF::acqMethod *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::AnalyzerMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::AnalyzerMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::FFTMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::FFTMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::IonSource_EI_Method &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::IonSource_EI_Method &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::IonSource_DART_Method &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::IonSource_DART_Method &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::IonSourceMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::IonSourceMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::ControlMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::ControlMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::TuneMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::TuneMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::Configuration &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::Configuration &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOF_configuration_sequence_H_
#define _TAO_CDR_OP_TOF_configuration_sequence_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOF::configuration_sequence &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOF::configuration_sequence &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOF_configuration_sequence_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::DeviceId &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::DeviceId &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::acqSegment &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::acqSegment &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOF_acqSegment_sequence_H_
#define _TAO_CDR_OP_TOF_acqSegment_sequence_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOF::acqSegment_sequence &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOF::acqSegment_sequence &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOF_acqSegment_sequence_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOF::acqMethod &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOF::acqMethod &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "methodC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

