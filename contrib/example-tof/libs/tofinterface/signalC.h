// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.9
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_IDL_SIGNALC_WWIDGP_H_
#define _TAO_IDL_SIGNALC_WWIDGP_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "methodC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 9
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_root\root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace TOFSignal
{

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_EI_Setpts;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_EI_Setpts
      >
    IonSource_EI_Setpts_var;

  typedef
    IonSource_EI_Setpts &
    IonSource_EI_Setpts_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_EI_Setpts
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_EI_Setpts_var _var_type;
    typedef IonSource_EI_Setpts_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong source_temp_setpt;
    ::CORBA::ULong interface_temp_setpt;
    ::CORBA::ULong ionization_voltage_setpt;
    ::CORBA::ULong trap_current_setpt;
    ::CORBA::ULong pulse_voltage_setpt;
    ::CORBA::ULong potential_lift_voltage_setpt;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_EI_Setpts;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_EI_Actuals;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_EI_Actuals
      >
    IonSource_EI_Actuals_var;

  typedef
    IonSource_EI_Actuals &
    IonSource_EI_Actuals_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_EI_Actuals
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_EI_Actuals_var _var_type;
    typedef IonSource_EI_Actuals_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong source_temp_actual;
    ::CORBA::ULong interface_temp_actual;
    ::CORBA::ULong ionization_voltage_actual;
    ::CORBA::ULong trap_current_actual;
    ::CORBA::ULong pulse_voltage_actual;
    ::CORBA::ULong potential_lift_voltage_actual;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_EI_Actuals;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_DART_Setpts;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_DART_Setpts
      >
    IonSource_DART_Setpts_var;

  typedef
    IonSource_DART_Setpts &
    IonSource_DART_Setpts_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_DART_Setpts
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_DART_Setpts_var _var_type;
    typedef IonSource_DART_Setpts_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong to_be_determined;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_DART_Setpts;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct IonSource_DART_Actuals;

  typedef
    ::TAO_Fixed_Var_T<
        IonSource_DART_Actuals
      >
    IonSource_DART_Actuals_var;

  typedef
    IonSource_DART_Actuals &
    IonSource_DART_Actuals_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  IonSource_DART_Actuals
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSource_DART_Actuals_var _var_type;
    typedef IonSource_DART_Actuals_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong to_be_determined;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSource_DART_Actuals;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  class IonSourceSetpts;

  typedef
    ::TAO_Fixed_Var_T<
        IonSourceSetpts
      >
    IonSourceSetpts_var;

  typedef
    IonSourceSetpts &
    IonSourceSetpts_out;

  class  IonSourceSetpts
  {
  public:
    IonSourceSetpts (void);
    IonSourceSetpts (const IonSourceSetpts &);
    ~IonSourceSetpts (void);

    IonSourceSetpts &operator= (const IonSourceSetpts &);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\discriminant_ch.cpp:70

    void _d (TOF_C::eIonSource);
    TOF_C::eIonSource _d (void) const;

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef IonSourceSetpts_var _var_type;
    typedef IonSourceSetpts_out _out_type;

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:659

    void ei (const TOFSignal::IonSource_EI_Setpts &);
    const TOFSignal::IonSource_EI_Setpts &ei (void) const;
    TOFSignal::IonSource_EI_Setpts &ei (void);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:659

    void dart (const TOFSignal::IonSource_DART_Setpts &);
    const TOFSignal::IonSource_DART_Setpts &dart (void) const;
    TOFSignal::IonSource_DART_Setpts &dart (void);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\union_ch.cpp:124

    void _default (void);
  private:
    TOF_C::eIonSource disc_;

    union
    {
      // TAO_IDL - Generated from
      // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:522
      TOFSignal::IonSource_EI_Setpts ei_;
      // TAO_IDL - Generated from
      // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:522
      TOFSignal::IonSource_DART_Setpts dart_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_IonSourceSetpts;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct tofStaticSetpts;

  typedef
    ::TAO_Fixed_Var_T<
        tofStaticSetpts
      >
    tofStaticSetpts_var;

  typedef
    tofStaticSetpts &
    tofStaticSetpts_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  tofStaticSetpts
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef tofStaticSetpts_var _var_type;
    typedef tofStaticSetpts_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Double setpts;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_tofStaticSetpts;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct tofStaticActs;

  typedef
    ::TAO_Fixed_Var_T<
        tofStaticActs
      >
    tofStaticActs_var;

  typedef
    tofStaticActs &
    tofStaticActs_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  tofStaticActs
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef tofStaticActs_var _var_type;
    typedef tofStaticActs_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Double acts;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_tofStaticActs;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct AnalyzerSetpts;

  typedef
    ::TAO_Fixed_Var_T<
        AnalyzerSetpts
      >
    AnalyzerSetpts_var;

  typedef
    AnalyzerSetpts &
    AnalyzerSetpts_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  AnalyzerSetpts
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef AnalyzerSetpts_var _var_type;
    typedef AnalyzerSetpts_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong einzel_lens_voltage;
    ::CORBA::ULong matsuda_plate_voltage;
    ::CORBA::ULong ion_gate_voltage;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AnalyzerSetpts;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct AnalyzerActuals;

  typedef
    ::TAO_Fixed_Var_T<
        AnalyzerActuals
      >
    AnalyzerActuals_var;

  typedef
    AnalyzerActuals &
    AnalyzerActuals_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  AnalyzerActuals
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef AnalyzerActuals_var _var_type;
    typedef AnalyzerActuals_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong einzel_lens_voltage;
    ::CORBA::ULong matsuda_plate_voltage;
    ::CORBA::ULong ion_gate_voltage;
    ::CORBA::ULong ion_gate_current;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AnalyzerActuals;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct AnalyzerDeviceData;

  typedef
    ::TAO_Fixed_Var_T<
        AnalyzerDeviceData
      >
    AnalyzerDeviceData_var;

  typedef
    AnalyzerDeviceData &
    AnalyzerDeviceData_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  AnalyzerDeviceData
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef AnalyzerDeviceData_var _var_type;
    typedef AnalyzerDeviceData_out _out_type;

    static void _tao_any_destructor (void *);
    
    TOFSignal::AnalyzerSetpts setpts;
    TOFSignal::AnalyzerActuals actuals;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AnalyzerDeviceData;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct InstEvent;

  typedef
    ::TAO_Fixed_Var_T<
        InstEvent
      >
    InstEvent_var;

  typedef
    InstEvent &
    InstEvent_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  InstEvent
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef InstEvent_var _var_type;
    typedef InstEvent_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong eventId_;
    ::CORBA::ULong eventValue_;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstEvent;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct SpectrumPeakInfo;

  typedef
    ::TAO_Fixed_Var_T<
        SpectrumPeakInfo
      >
    SpectrumPeakInfo_var;

  typedef
    SpectrumPeakInfo &
    SpectrumPeakInfo_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  SpectrumPeakInfo
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef SpectrumPeakInfo_var _var_type;
    typedef SpectrumPeakInfo_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Float monitor_range_lower;
    ::CORBA::Float monitor_range_upper;
    ::CORBA::Double peakMass;
    ::CORBA::Float peakHeight;
    ::CORBA::Float peakArea;
    ::CORBA::Float resolvingPower;
    ::CORBA::Float resolvingPowerX1;
    ::CORBA::Float resolvingPowerX2;
    ::CORBA::Float resolvingPowerHH;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SpectrumPeakInfo;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOFSIGNAL_SPECTRUMPEAKINFOVEC_CH_)
#define _TOFSIGNAL_SPECTRUMPEAKINFOVEC_CH_

  class SpectrumPeakInfoVec;

  typedef
    ::TAO_FixedSeq_Var_T<
        SpectrumPeakInfoVec
      >
    SpectrumPeakInfoVec_var;

  typedef
    ::TAO_Seq_Out_T<
        SpectrumPeakInfoVec
      >
    SpectrumPeakInfoVec_out;

  class  SpectrumPeakInfoVec
    : public
        ::TAO::unbounded_value_sequence<
            SpectrumPeakInfo
          >
  {
  public:
    SpectrumPeakInfoVec (void);
    SpectrumPeakInfoVec ( ::CORBA::ULong max);
    SpectrumPeakInfoVec (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SpectrumPeakInfo* buffer,
      ::CORBA::Boolean release = false);
    SpectrumPeakInfoVec (const SpectrumPeakInfoVec &);
    virtual ~SpectrumPeakInfoVec (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef SpectrumPeakInfoVec_var _var_type;
    typedef SpectrumPeakInfoVec_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SpectrumPeakInfoVec;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct SpectrumProcessedData;

  typedef
    ::TAO_Var_Var_T<
        SpectrumProcessedData
      >
    SpectrumProcessedData_var;

  typedef
    ::TAO_Out_T<
        SpectrumProcessedData
      >
    SpectrumProcessedData_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  SpectrumProcessedData
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef SpectrumProcessedData_var _var_type;
    typedef SpectrumProcessedData_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Float tic;
    ::CORBA::Float spectralBaselineLevel;
    ::CORBA::ULongLong uptime;
    TOFSignal::SpectrumPeakInfoVec info;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SpectrumProcessedData;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOFSIGNAL_SPECTRUMPROCESSEDDATAARRAY_CH_)
#define _TOFSIGNAL_SPECTRUMPROCESSEDDATAARRAY_CH_

  class SpectrumProcessedDataArray;

  typedef
    ::TAO_VarSeq_Var_T<
        SpectrumProcessedDataArray
      >
    SpectrumProcessedDataArray_var;

  typedef
    ::TAO_Seq_Out_T<
        SpectrumProcessedDataArray
      >
    SpectrumProcessedDataArray_out;

  class  SpectrumProcessedDataArray
    : public
        ::TAO::unbounded_value_sequence<
            SpectrumProcessedData
          >
  {
  public:
    SpectrumProcessedDataArray (void);
    SpectrumProcessedDataArray ( ::CORBA::ULong max);
    SpectrumProcessedDataArray (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SpectrumProcessedData* buffer,
      ::CORBA::Boolean release = false);
    SpectrumProcessedDataArray (const SpectrumProcessedDataArray &);
    virtual ~SpectrumProcessedDataArray (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef SpectrumProcessedDataArray_var _var_type;
    typedef SpectrumProcessedDataArray_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SpectrumProcessedDataArray;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct TraceMetadata;

  typedef
    ::TAO_Fixed_Var_T<
        TraceMetadata
      >
    TraceMetadata_var;

  typedef
    TraceMetadata &
    TraceMetadata_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  TraceMetadata
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef TraceMetadata_var _var_type;
    typedef TraceMetadata_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong wellKnownEvents;
    ::CORBA::ULong ndata;
    ::CORBA::ULongLong uptime;
    ::CORBA::ULong timeSinceInject;
    ::CORBA::ULong sampInterval;
    ::CORBA::ULong dataType;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TraceMetadata;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOFSIGNAL_VALUE_SEQUENCE_CH_)
#define _TOFSIGNAL_VALUE_SEQUENCE_CH_

  class value_sequence;

  typedef
    ::TAO_FixedSeq_Var_T<
        value_sequence
      >
    value_sequence_var;

  typedef
    ::TAO_Seq_Out_T<
        value_sequence
      >
    value_sequence_out;

  class  value_sequence
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Long
          >
  {
  public:
    value_sequence (void);
    value_sequence ( ::CORBA::ULong max);
    value_sequence (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer,
      ::CORBA::Boolean release = false);
    value_sequence (const value_sequence &);
    virtual ~value_sequence (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef value_sequence_var _var_type;
    typedef value_sequence_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_value_sequence;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct datum;

  typedef
    ::TAO_Var_Var_T<
        datum
      >
    datum_var;

  typedef
    ::TAO_Out_T<
        datum
      >
    datum_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  datum
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef datum_var _var_type;
    typedef datum_out _out_type;

    static void _tao_any_destructor (void *);
    
    TOF::acqSegment acqSegment;
    TOFSignal::value_sequence values;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_datum;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_TOFSIGNAL_DATUM_SEQUENCE_CH_)
#define _TOFSIGNAL_DATUM_SEQUENCE_CH_

  class datum_sequence;

  typedef
    ::TAO_VarSeq_Var_T<
        datum_sequence
      >
    datum_sequence_var;

  typedef
    ::TAO_Seq_Out_T<
        datum_sequence
      >
    datum_sequence_out;

  class  datum_sequence
    : public
        ::TAO::unbounded_value_sequence<
            datum
          >
  {
  public:
    datum_sequence (void);
    datum_sequence ( ::CORBA::ULong max);
    datum_sequence (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      datum* buffer,
      ::CORBA::Boolean release = false);
    datum_sequence (const datum_sequence &);
    virtual ~datum_sequence (void);
    

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef datum_sequence_var _var_type;
    typedef datum_sequence_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_datum_sequence;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

  struct tofDATA;

  typedef
    ::TAO_Var_Var_T<
        tofDATA
      >
    tofDATA_var;

  typedef
    ::TAO_Out_T<
        tofDATA
      >
    tofDATA_out;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

  struct  tofDATA
  {

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    
    typedef tofDATA_var _var_type;
    typedef tofDATA_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong sequenceNumber;
    ::CORBA::ULongLong rtcTimeStamp;
    ::CORBA::ULongLong clockTimeStamp;
    ::CORBA::ULong wellKnownEvents;
    ::CORBA::ULong methodId;
    ::CORBA::UShort numberOfProfiles;
    TOFSignal::datum_sequence data;
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_tofDATA;

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_TOFSIGNAL_NO_EMPTY_FILE__VAR_OUT_CH_)
#define _TOFSIGNAL_NO_EMPTY_FILE__VAR_OUT_CH_

  class no_empty_file;
  typedef no_empty_file *no_empty_file_ptr;

  typedef
    TAO_Objref_Var_T<
        no_empty_file
      >
    no_empty_file_var;
  
  typedef
    TAO_Objref_Out_T<
        no_empty_file
      >
    no_empty_file_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

  class  no_empty_file
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<no_empty_file>;

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    typedef no_empty_file_ptr _ptr_type;
    typedef no_empty_file_var _var_type;
    typedef no_empty_file_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static no_empty_file_ptr _duplicate (no_empty_file_ptr obj);

    static void _tao_release (no_empty_file_ptr obj);

    static no_empty_file_ptr _narrow (::CORBA::Object_ptr obj);
    static no_empty_file_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static no_empty_file_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    no_empty_file (void);

    // Concrete non-local interface only.
    no_empty_file (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    no_empty_file (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~no_empty_file (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    no_empty_file (const no_empty_file &);

    void operator= (const no_empty_file &);
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_no_empty_file;

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module TOFSignal

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::IonSource_EI_Setpts>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::IonSource_EI_Setpts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::IonSource_EI_Actuals>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::IonSource_EI_Actuals,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::IonSource_DART_Setpts>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::IonSource_DART_Setpts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::IonSource_DART_Actuals>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::IonSource_DART_Actuals,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::TOFSignal::IonSourceSetpts>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::IonSourceSetpts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::tofStaticSetpts>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::tofStaticSetpts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::tofStaticActs>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::tofStaticActs,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::AnalyzerSetpts>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::AnalyzerSetpts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::AnalyzerActuals>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::AnalyzerActuals,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::AnalyzerDeviceData>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::AnalyzerDeviceData,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::InstEvent>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::InstEvent,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::SpectrumPeakInfo>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::SpectrumPeakInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOFSignal::SpectrumPeakInfoVec>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::SpectrumPeakInfoVec,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::SpectrumProcessedData>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::SpectrumProcessedData,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOFSignal::SpectrumProcessedDataArray>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::SpectrumProcessedDataArray,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::TraceMetadata>
    : public
        Fixed_Size_Arg_Traits_T<
            ::TOFSignal::TraceMetadata,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOFSignal::value_sequence>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::value_sequence,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::datum>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::datum,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::TOFSignal::datum_sequence>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::datum_sequence,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::TOFSignal::tofDATA>
    : public
        Var_Size_Arg_Traits_T<
            ::TOFSignal::tofDATA,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_TOFSIGNAL_NO_EMPTY_FILE__ARG_TRAITS_)
#define _TOFSIGNAL_NO_EMPTY_FILE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::TOFSignal::no_empty_file>
    : public
        Object_Arg_Traits_T<
            ::TOFSignal::no_empty_file_ptr,
            ::TOFSignal::no_empty_file_var,
            ::TOFSignal::no_empty_file_out,
            TAO::Objref_Traits<TOFSignal::no_empty_file>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_TOFSIGNAL_NO_EMPTY_FILE__TRAITS_)
#define _TOFSIGNAL_NO_EMPTY_FILE__TRAITS_

  template<>
  struct  Objref_Traits< ::TOFSignal::no_empty_file>
  {
    static ::TOFSignal::no_empty_file_ptr duplicate (
        ::TOFSignal::no_empty_file_ptr p);
    static void release (
        ::TOFSignal::no_empty_file_ptr p);
    static ::TOFSignal::no_empty_file_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::TOFSignal::no_empty_file_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::IonSource_EI_Setpts &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::IonSource_EI_Setpts*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::IonSource_EI_Setpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::IonSource_EI_Setpts *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::IonSource_EI_Setpts &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::IonSource_EI_Setpts*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::IonSource_EI_Setpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::IonSource_EI_Setpts *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::IonSource_EI_Actuals &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::IonSource_EI_Actuals*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::IonSource_EI_Actuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::IonSource_EI_Actuals *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::IonSource_EI_Actuals &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::IonSource_EI_Actuals*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::IonSource_EI_Actuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::IonSource_EI_Actuals *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::IonSource_DART_Setpts &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::IonSource_DART_Setpts*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::IonSource_DART_Setpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::IonSource_DART_Setpts *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::IonSource_DART_Setpts &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::IonSource_DART_Setpts*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::IonSource_DART_Setpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::IonSource_DART_Setpts *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::IonSource_DART_Actuals &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::IonSource_DART_Actuals*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::IonSource_DART_Actuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::IonSource_DART_Actuals *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::IonSource_DART_Actuals &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::IonSource_DART_Actuals*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::IonSource_DART_Actuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::IonSource_DART_Actuals *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\any_op_ch.cpp:40



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::IonSourceSetpts &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::IonSourceSetpts*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::IonSourceSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::IonSourceSetpts *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::IonSourceSetpts &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::IonSourceSetpts*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::IonSourceSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::IonSourceSetpts *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::tofStaticSetpts &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::tofStaticSetpts*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::tofStaticSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::tofStaticSetpts *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::tofStaticSetpts &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::tofStaticSetpts*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::tofStaticSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::tofStaticSetpts *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::tofStaticActs &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::tofStaticActs*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::tofStaticActs *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::tofStaticActs *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::tofStaticActs &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::tofStaticActs*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::tofStaticActs *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::tofStaticActs *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::AnalyzerSetpts &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::AnalyzerSetpts*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::AnalyzerSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::AnalyzerSetpts *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::AnalyzerSetpts &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::AnalyzerSetpts*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::AnalyzerSetpts *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::AnalyzerSetpts *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::AnalyzerActuals &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::AnalyzerActuals*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::AnalyzerActuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::AnalyzerActuals *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::AnalyzerActuals &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::AnalyzerActuals*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::AnalyzerActuals *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::AnalyzerActuals *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::AnalyzerDeviceData &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::AnalyzerDeviceData*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::AnalyzerDeviceData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::AnalyzerDeviceData *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::AnalyzerDeviceData &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::AnalyzerDeviceData*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::AnalyzerDeviceData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::AnalyzerDeviceData *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::InstEvent &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::InstEvent*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::InstEvent *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::InstEvent *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::InstEvent &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::InstEvent*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::InstEvent *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::InstEvent *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::SpectrumPeakInfo &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::SpectrumPeakInfo*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::SpectrumPeakInfo *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::SpectrumPeakInfo *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::SpectrumPeakInfo &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::SpectrumPeakInfo*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::SpectrumPeakInfo *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::SpectrumPeakInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= ( ::CORBA::Any &, const ::TOFSignal::SpectrumPeakInfoVec &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOFSignal::SpectrumPeakInfoVec*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::SpectrumPeakInfoVec *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::SpectrumPeakInfoVec *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOFSignal::SpectrumPeakInfoVec &); // copying version
 void operator<<= ( ::CORBA::Any &, TOFSignal::SpectrumPeakInfoVec*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::SpectrumPeakInfoVec *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::SpectrumPeakInfoVec *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::SpectrumProcessedData &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::SpectrumProcessedData*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::SpectrumProcessedData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::SpectrumProcessedData *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::SpectrumProcessedData &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::SpectrumProcessedData*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::SpectrumProcessedData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::SpectrumProcessedData *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= ( ::CORBA::Any &, const ::TOFSignal::SpectrumProcessedDataArray &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOFSignal::SpectrumProcessedDataArray*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::SpectrumProcessedDataArray *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::SpectrumProcessedDataArray *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOFSignal::SpectrumProcessedDataArray &); // copying version
 void operator<<= ( ::CORBA::Any &, TOFSignal::SpectrumProcessedDataArray*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::SpectrumProcessedDataArray *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::SpectrumProcessedDataArray *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::TraceMetadata &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::TraceMetadata*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::TraceMetadata *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::TraceMetadata *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::TraceMetadata &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::TraceMetadata*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::TraceMetadata *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::TraceMetadata *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= ( ::CORBA::Any &, const ::TOFSignal::value_sequence &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOFSignal::value_sequence*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::value_sequence *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::value_sequence *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOFSignal::value_sequence &); // copying version
 void operator<<= ( ::CORBA::Any &, TOFSignal::value_sequence*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::value_sequence *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::value_sequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::datum &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::datum*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::datum *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::datum *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::datum &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::datum*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::datum *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::datum *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= ( ::CORBA::Any &, const ::TOFSignal::datum_sequence &); // copying version
   void operator<<= ( ::CORBA::Any &, ::TOFSignal::datum_sequence*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::datum_sequence *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::datum_sequence *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const TOFSignal::datum_sequence &); // copying version
 void operator<<= ( ::CORBA::Any &, TOFSignal::datum_sequence*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::datum_sequence *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::datum_sequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= (::CORBA::Any &, const ::TOFSignal::tofDATA &); // copying version
   void operator<<= (::CORBA::Any &, ::TOFSignal::tofDATA*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::TOFSignal::tofDATA *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::TOFSignal::tofDATA *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const TOFSignal::tofDATA &); // copying version
 void operator<<= (::CORBA::Any &, TOFSignal::tofDATA*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::tofDATA *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TOFSignal::tofDATA *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TOFSignal
{
   void operator<<= ( ::CORBA::Any &, no_empty_file_ptr); // copying
   void operator<<= ( ::CORBA::Any &, no_empty_file_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, no_empty_file_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, TOFSignal::no_empty_file_ptr); // copying
 void operator<<= (::CORBA::Any &, TOFSignal::no_empty_file_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TOFSignal::no_empty_file_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::IonSource_EI_Setpts &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::IonSource_EI_Setpts &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::IonSource_EI_Actuals &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::IonSource_EI_Actuals &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::IonSource_DART_Setpts &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::IonSource_DART_Setpts &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::IonSource_DART_Actuals &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::IonSource_DART_Actuals &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_union\cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::IonSourceSetpts &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::IonSourceSetpts &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::tofStaticSetpts &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::tofStaticSetpts &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::tofStaticActs &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::tofStaticActs &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::AnalyzerSetpts &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::AnalyzerSetpts &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::AnalyzerActuals &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::AnalyzerActuals &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::AnalyzerDeviceData &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::AnalyzerDeviceData &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::InstEvent &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::InstEvent &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::SpectrumPeakInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::SpectrumPeakInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOFSignal_SpectrumPeakInfoVec_H_
#define _TAO_CDR_OP_TOFSignal_SpectrumPeakInfoVec_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOFSignal::SpectrumPeakInfoVec &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOFSignal::SpectrumPeakInfoVec &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOFSignal_SpectrumPeakInfoVec_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::SpectrumProcessedData &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::SpectrumProcessedData &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOFSignal_SpectrumProcessedDataArray_H_
#define _TAO_CDR_OP_TOFSignal_SpectrumProcessedDataArray_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOFSignal::SpectrumProcessedDataArray &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOFSignal::SpectrumProcessedDataArray &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOFSignal_SpectrumProcessedDataArray_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::TraceMetadata &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::TraceMetadata &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOFSignal_value_sequence_H_
#define _TAO_CDR_OP_TOFSignal_value_sequence_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOFSignal::value_sequence &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOFSignal::value_sequence &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOFSignal_value_sequence_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::datum &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::datum &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_TOFSignal_datum_sequence_H_
#define _TAO_CDR_OP_TOFSignal_datum_sequence_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TOFSignal::datum_sequence &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TOFSignal::datum_sequence &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_TOFSignal_datum_sequence_H_ */

// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::tofDATA &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::tofDATA &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TOFSignal::no_empty_file_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, TOFSignal::no_empty_file_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\toshi\src\vc11\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "signalC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

